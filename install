#!/usr/bin/env bash

home=`pwd`
os=`uname`
echo $home
uname -a

function config_vim() {
    sudo apt-get -y install build-essential cmake python-dev python3-dev
    git clone https://github.com/boomshankerx/vim ~/vim
    cd ~/vim
    chmod +x install
    ./vim -i
    cd $home
}

function install_config {
    echo "** Installing common scripts..."
    [ -d ~/scripts ] || mkdir ~/scripts
    [ -L ~/s ] || ln -s ~/scripts ~/s
    cp -r scripts/ ~/scripts/

    cp -vrT home ~

    git clone https://github.com/aaron-williamson/base16-gnome-terminal.git ~/.config/base16-gnome-terminal

    #BASH
    echo "** Installing config files"
    touch ~/.bash_aliases
    sed -i /##CUSTOM##/,/####/d ~/.bash_aliases
    cat home/.bash_aliases >> ~/.bash_aliases
    sed -i /##DEBIAN##/,/####/d ~/.bash_aliases
    cat debian/.bash_aliases >> ~/.bash_aliases

}

function install_base {
    echo "** Installing base software..."
    sudo apt-get -y install atop
    sudo apt-get -y install byobu
    sudo apt-get -y install exuberant-ctags
    sudo apt-get -y install git 
    sudo apt-get -y install powerline
    sudo apt-get -y install rsync
    sudo apt-get -y install sudo
    sudo apt-get -y install build-essential cmake
    sudo apt-get -y install python-dev python3-dev


    if [[ -z $DISPLAY ]]; then
        sudo apt-get -y install vim-nox
    else
        sudo apt-get -y install gitk git-gui
        #sudo apt-get -y install terminator
        sudo apt-get -y install vim-gtk3
    fi
}

function install_chrome {
    wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add - 
    sudo sh -c 'echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
    sudo apt-get update 
    sudo apt-get install google-chrome-stable
}

function install_dev {
    echo "** Installing development packages..."
    sudo apt-get -y install csstidy
    sudo apt-get -y install tidy
}

function install_docker {
    curl -sSL https://get.docker.com/ | sh 
}
function install_fonts {
    sudo apt-get -y install fonts-powerline
    git clone https://github.com/powerline/fonts.git ~/fonts --depth=1
    ~/fonts/install.sh
    sudo fc-cache -fv
    rm -fr ~/fonts
}

function install_gui {
    sudo apt-get -y install docky
    sudo apt-get -y install gnome-do
}

function install_net {
    echo "** Installing network packages..."
    sudo apt-get -y install wireshark
    sudo apt-get -y install kismet
    sudo apt-get -y install nmap
    sudo apt-get -y install zenmap
}

function sub_samba {
    # Samba
    echo "** Installing samba..."
    sudo apt-get install samba
    sudo apt-get install smbfs
    sudo apt-get install winbind
    sudo sed -i.bak 's/files mdns4_minimal/files wins mdns4_minimal/' /etc/nsswitch.conf
    sudo sed -i.bak 's/workgroup = .*/workgroup = TECHG/' /etc/samba/smb.conf
}

function install_tmux() {
    sudo apt-get -y install tmux
    sudo apt-get -y install tmuxinator
    sudo apt-get install automake build-essential pkg-config libevent-dev libncurses5-dev
    rm -fr /tmp/tmux
    git clone https://github.com/tmux/tmux.git /tmp/tmux
    cd /tmp/tmux
    git checkout 2.9
    sh autogen.sh
    ./configure && make
    sudo make install
    sudo ln -s /usr/bin/tmuxinator /usr/bin/mux
    cd -
}

function install_vmware {
    sudo apt-get -y install open-vm-tools 
    if [[ -n $DISPLAY ]]; then
        sudo apt-get -y install open-vm-tools-desktop 
    fi
}

function install_zsh {
    sudo apt-get -y install zsh
    sh -c "$(wget https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh -O -)"
    #sh -c "$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"

    sudo chown -R $USER:$USER ~/.oh-my-zsh

    touch ~/.oh-my-zsh/custom/techg.zsh
    sed -i'' /##DEBIAN##/,/####/d ~/.oh-my-zsh/custom/techg.zsh
    cat debian/.bash_aliases >> ~/.oh-my-zsh/custom/techg.zsh
}

function init {
    echo 'Executing base,config,fonts,zsh\n'
    install_base
    install_zsh
    install_tmux
    install_fonts
    install_config
}

# PROCESS ARGUMENTS

function showhelp {
    echo "USAGE install.ubuntu [-u] [options]
    Options
    =======
    base    : base packages
    chrome  : configure chrome ppa and install
    config  : base configuration
    dev     : development packages
    docker  : install docker
    fonts   : install fonts
    init    : run base,config,fonts,zsh
    net     : network tools
    tmux    : install latest tmux
    vim     : config vim
    vmware  : install vmware tools
    zsh     : install oh-my-zsh"
}

if [ "$1" == "-u" ]; then
    sudo apt-get update
fi

[ $# == 0 ] && showhelp
for arg in $@
do
    case $arg in
        "base")   install_base;;
        "chrome") install_chrome;;
        "config") install_config;;
        "dev")    install_dev;;
        "docker") install_docker;;
        "fonts")  install_fonts;;
        "init")   init;;
        "net")    install_net;;
        "tmux")   install_tmux;;
        "vim")    config_vim;;
        "vmware") install_vmware;;
        "zsh")    install_zsh;;
    esac
done

