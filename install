#!/usr/bin/env bash

home=`pwd`
os=`uname`
echo $home
uname -a

function install_config {
    echo "** Installing config files"
    cp -vrT etc ~
    [ -L ~/s ] || ln -s ~/scripts ~/s

    sed -i /##DEBIAN##/,/####/d ~/.bash_aliases
    cat debian/.bash_aliases >> ~/.bash_aliases
    sed -i /##DEBIAN##/,/####/d ~/.oh-my-zsh/custom/techg.zsh
    cat debian/.bash_aliases >> ~/.oh-my-zsh/custom/techg.zsh
}

function install_base {
    echo "** Installing base software..."
    sudo apt-get -y install atop
    sudo apt-get -y install byobu
    sudo apt-get -y install exuberant-ctags
    sudo apt-get -y install git 
    sudo apt-get -y install powerline
    sudo apt-get -y install rsync
    sudo apt-get -y install sudo
    sudo apt-get -y install build-essential cmake
    sudo apt-get -y install python-dev python3-dev

    if [[ -z $DISPLAY ]]; then
        sudo apt-get -y install vim-nox
    else
        sudo apt-get -y install gitk git-gui
        sudo apt-get -y install vim-gtk3
    fi
}

function install_chrome {
    wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add - 
    sudo sh -c 'echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
    sudo apt-get update 
    sudo apt-get install google-chrome-stable
}

function install_dev {
    echo "** Installing development packages..."
    sudo apt-get -y install csstidy
    sudo apt-get -y install tidy
}

function install_docker {
    curl -sSL https://get.docker.com/ | sh 
}
function install_fonts {
    sudo apt-get -y install fonts-powerline
    git clone https://github.com/powerline/fonts.git ~/fonts --depth=1
    ~/fonts/install.sh
    sudo fc-cache -fv
    rm -fr ~/fonts
}

function install_net {
    echo "** Installing network packages..."
    sudo apt-get -y install kismet
    sudo apt-get -y install nmap
    if [[ -n $DISPLAY ]]; then
        sudo apt-get -y install zenmap
        sudo apt-get -y install wireshark
    fi
}

function install_vmware {
    sudo apt-get -y install open-vm-tools 
    if [[ -n $DISPLAY ]]; then
        sudo apt-get -y install open-vm-tools-desktop 
    fi
}

function init {
    echo 'Initializing base system...'
    install_base
    install_fonts
    install_config
    . plugins/tmux
    . plugins/zsh
}

function plugins() {
    [[ -f "plugins/$1" ]] && . plugins/$1
}
# PROCESS ARGUMENTS

function usage() {
    echo "USAGE install [-u] [options]
    Options
    =======
    base    : Install base packages
    chrome  : Install Chrome web browser
    config  : Install configuration files
    dev     : Install development packages
    docker  : Install docker
    fonts   : Install fonts
    init    : Initialize base system
    net     : Install network tools
    vmware  : Install vmware tools

    PLUGINS
    =======
    samba   : Install + Configure Samba Server
    tmux    : Install TMUX 
    vim     : Build VIM
    zsh     : Install oh-my-zsh"
}

if [ "$1" == "-u" ]; then
    sudo apt-get update
fi


[ $# == 0 ] && usage
for arg in $@
do
    case $arg in
        "base"   ) install_base;;
        "chrome" ) install_chrome;;
        "config" ) install_config;;
        "dev"    ) install_dev;;
        "docker" ) install_docker;;
        "fonts"  ) install_fonts;;
        "init"   ) init;;
        "net"    ) install_net;;
        "vmware" ) install_vmware;;
        *        ) plugins $arg;;
    esac
done

